name: Build and Push Docker Images

on:
  #push:
  #  paths:
  #    - '**/Dockerfile*'
  #    - '**/*.py'
  #    - '**/*.sh'
  workflow_dispatch:

env:
  DOCKER_NAMESPACE: ${{ secrets.DOCKER_NAMESPACE }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  GHCR_NAMESPACE: ${{ secrets.GHCR_NAMESPACE }}
  GHCR_PAT: ${{ secrets.GHCR_PAT }}
  GHCR_ORG_NAMESPACE: ${{ secrets.GHCR_ORG_NAMESPACE }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ env.DOCKER_NAMESPACE }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_NAMESPACE }}
          password: ${{ env.GHCR_PAT }}

      - name: Detect changed services
        id: changes
        run: |
          git fetch origin ${{ github.event.before }}
          CHANGED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | \
            awk -F/ '{print $1}' | sort -u)

          SERVICES=""
          for dir in $CHANGED_DIRS; do
            if ls "$dir"/Dockerfile* 1> /dev/null 2>&1; then
              SERVICES="$SERVICES $dir"
            fi
          done

          echo "services=$SERVICES" >> "$GITHUB_OUTPUT"

      - name: Build and push each service
        if: steps.changes.outputs.services != ''
        run: |
          IFS=' ' read -r -a services_array <<< "${{ steps.changes.outputs.services }}"
          rm -f images.txt
          for dir in "${services_array[@]}"; do
            echo "👉 Building $dir"
            bash public_scripts/build_one_Dockerfile.sh "$dir"
          done
        env:
          DOCKER_NAMESPACE: ${{ env.DOCKER_NAMESPACE }}
          GHCR_ORG_NAMESPACE: ${{ env.GHCR_ORG_NAMESPACE }}

      - name: Show pushed images summary
        run: |
          echo "--- 推送镜像列表 ---"
          cat images.txt || echo "无镜像推送"
          echo "--------------------"
