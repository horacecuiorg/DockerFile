name: build

on:
  push:
    paths:
      - '**/Dockerfile*'
      - '**/*.py'
      - '**/*.sh'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_NAMESPACE }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Detect changed services
        id: changes
        run: |
          git fetch origin ${{ github.event.before }}
          CHANGED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | \
            awk -F/ '{print $1}' | sort -u)

          SERVICES=""
          for dir in $CHANGED_DIRS; do
            if ls "$dir"/Dockerfile* 1> /dev/null 2>&1; then
              SERVICES="$SERVICES $dir"
            fi
          done

          echo "services=$SERVICES" >> $GITHUB_OUTPUT

      - name: Build and push Docker images
        if: steps.changes.outputs.services != ''
        run: |
          for dir in ${{ steps.changes.outputs.services }}; do
            for file in "$dir"/Dockerfile*; do
              [ -f "$file" ] || continue
              base=$(basename "$file")
              service=$(basename "$dir")

              if [[ "$base" == "Dockerfile" ]]; then
                tag="latest"
              else
                tag="${base#Dockerfile_}"
              fi

              image="${{ secrets.DOCKER_NAMESPACE }}/$service:$tag"

              echo "ðŸ“¦ Building and pushing $image from $file..."

              docker buildx build \
                --file "$file" \
                --platform linux/amd64,linux/arm64 \
                --push \
                --cache-from type=gha \
                --cache-to type=gha,mode=max \
                -t "$image" "$dir"
            done
          done
