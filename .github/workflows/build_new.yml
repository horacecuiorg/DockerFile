name: Build and Push Docker Images to Both Registries

on:
  push:
    paths:
      - '**/Dockerfile*'
      - '**/*.py'
      - '**/*.sh'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        id: login_dockerhub
        #if: ${{ secrets.DOCKER_NAMESPACE && secrets.DOCKER_PASSWORD }}
        if: env.HAS_DOCKER_CREDENTIALS == 'true'
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_NAMESPACE }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        env:
          HAS_DOCKER_CREDENTIALS: ${{ secrets.DOCKER_NAMESPACE && secrets.DOCKER_PASSWORD && 'true' || 'false' }}

      - name: Log in to GHCR
        id: login_GHCR
        #if: ${{  secrets.GHCR_NAMESPACE && secrets.GHCR_PAT && env.GHCR_ORG_NAMESPACE  }}
        if: env.HAS_GHCR_CREDENTIALS == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_NAMESPACE }} # **登录用户名**：使用 Secret
          password: ${{ secrets.GHCR_PAT }} # 使用 GHCR PAT Secret
        env:
          HAS_GHCR_CREDENTIALS: ${{ secrets.GHCR_NAMESPACE && secrets.GHCR_PAT && vars.GHCR_ORG_NAMESPACE && 'true' || 'false' }} 

      - name: Detect changed services
        id: changes
        run: |
          git fetch origin ${{ github.event.before }}
          CHANGED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | \
            awk -F/ '{print $1}' | sort -u)

          SERVICES=""
          for dir in $CHANGED_DIRS; do
            if ls "$dir"/Dockerfile* 1> /dev/null 2>&1; then
              SERVICES="$SERVICES $dir"
            fi
          done

          echo "services=$SERVICES" >> "$GITHUB_OUTPUT"

      - name: Build Docker images (without pushing)
        if: steps.changes.outputs.services != ''
        id: buildonly
        run: |
          # 将 services 字符串转换成数组
          IFS=' ' read -r -a services_array <<< "${{ steps.changes.outputs.services }}"

          for dir in "${services_array[@]}"; do
            for file in "$dir"/Dockerfile*; do
              [ -f "$file" ] || continue
              base=$(basename "$file")
              service=$(basename "$dir")

              if [[ "$base" == "Dockerfile" ]]; then
                tag="latest"
              else
                tag="${base#Dockerfile_}"
              fi

              echo "📦 Building $service:$tag from $file..."
              docker buildx build \
                --file "$file" \
                --platform linux/amd64,linux/arm64 \
                --cache-from type=gha,scope=$service \
                --cache-to type=gha,mode=max,scope=$service \
                --progress=plain \
                -t "${{ secrets.DOCKER_NAMESPACE }}/$service:$tag" \
                -t "ghcr.io/${{ env.GHCR_ORG_NAMESPACE }}/$service:$tag" \
                "$dir"
            done
          done

      - name: Push Docker images to Docker Hub
        if: steps.login_dockerhub.outcome == 'success' && steps.changes.outputs.services
        id: push_docker_hub
        run: |
          IMAGES_PUSHED=()
          for dir in ${{ fromJson(steps.changes.outputs.services) }}; do
            for file in "$dir"/Dockerfile*; do
              [ -f "$file" ] || continue
              base=$(basename "$file")
              service=$(basename "$dir")

              if [[ "$base" == "Dockerfile" ]]; then
                tag="latest"
              else
                tag="${base#Dockerfile_}"
              fi
              image="${{ secrets.DOCKER_NAMESPACE }}/$service:$tag"
              echo "⬆️ Pushing $image to Docker Hub..."
              docker push "$image"
              IMAGES_PUSHED+=("$image")
            done
          done
          echo "docker_hub_images=${IMAGES_PUSHED[*]}" >> "$GITHUB_OUTPUT"

      - name: Push Docker images to GHCR
        if: steps.login_GHCR.outcome == 'success' && steps.changes.outputs.services
        id: push_ghcr
        run: |
          IMAGES_PUSHED=()
          for dir in ${{ fromJson(steps.changes.outputs.services) }}; do
            for file in "$dir"/Dockerfile*; do
              [ -f "$file" ] || continue
              base=$(basename "$file")
              service=$(basename "$dir")

              if [[ "$base" == "Dockerfile" ]]; then
                tag="latest"
              else
                tag="${base#Dockerfile_}"
              fi
              image="ghcr.io/${{ env.GHCR_ORG_NAMESPACE }}/$service:$tag" 
              echo "⬆️ Pushing $image to GHCR..."
              docker push "$image"
              IMAGES_PUSHED+=("$image")
            done
          done
          echo "ghcr_images=${IMAGES_PUSHED[*]}" >> "$GITHUB_OUTPUT"

      - name: Show pushed images summary
        # 显示所有成功推送的镜像
        if: steps.buildonly.outcome == 'success'
        run: |
          echo "--- 推送结果总结 ---"
          if [[ -n "${{ steps.push_docker_hub.outputs.docker_hub_images }}" ]]; then
            echo "✅ 已推送到 Docker Hub:"
            echo "${{ steps.push_docker_hub.outputs.docker_hub_images }}" | tr ' ' '\n'
          else
            echo "❌ 未推送到 Docker Hub (可能未配置或无变化)"
          fi
          echo ""
          if [[ -n "${{ steps.push_ghcr.outputs.ghcr_images }}" ]]; then
            echo "✅ 已推送到 GHCR:"
            echo "${{ steps.push_ghcr.outputs.ghcr_images }}" | tr ' ' '\n'
          else
            echo "❌ 未推送到 GHCR (可能未配置或无变化)"
          fi
          echo "--------------------"